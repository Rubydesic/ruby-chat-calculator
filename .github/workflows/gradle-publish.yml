# This workflow will build a package using Gradle and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#Publishing-using-gradle

name: Gradle Package

on:
  release:
    types: [created]

jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 16
      uses: actions/setup-java@v2
      with:
        java-version: '16'
        distribution: 'adopt'
        server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
        settings-path: ${{ github.workspace }} # location for the settings.xml file

    - uses: burrunan/gradle-cache-action@v1
      name: Build PROJECT_NAME
      # Extra environment variables for Gradle execution (regular GitHub Actions feature)
      # Note: env must be outside of "with"
      env:
        VARIABLE: VALUE
      with:
        # If you have multiple jobs, use distinct job-id in in case you want to split caches
        # For instance, jobs with different JDK versions can't share caches
        # RUNNER_OS is added to job-id automatically
        job-id: jdk16
        # Specifies arguments for Gradle execution
        # If arguments is missing or empty, then Gradle is not executed
        arguments: build
        # arguments can be multi-line for better readability
        # arguments: |
        #  --no-paralell
        #  build
        #  -x test
        # Gradle version to use for execution:
        #   wrapper (default), current, rc, nightly, release-nightly, or
        #   versions like 6.6 (see https://services.gradle.org/versions/all)
        gradle-version: wrapper
        # Properties are passed as -Pname=value

    - name: Upload binaries to release
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: "*/build/libs/*!(-dev|-sources).jar"
        file_glob: true
        tag: ${{ github.ref }}
        overwrite: true
        body: ""
  
